<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="BlockchainTest" tests="1" skipped="0" failures="1" errors="0" timestamp="2023-02-03T19:14:57" hostname="kronos-Olympos" time="15.042">
  <properties/>
  <testcase name="start" classname="BlockchainTest" time="15.042">
    <failure message="java.lang.AssertionError: Error in test #1&#10;&#10;In this test, the program is running for a long time, more than 15 seconds. Most likely, the program has gone into an infinite loop.&#10;&#10;Please find below the output of your program during this failed test.&#10;&#10;---&#10;&#10;Block:&#10;Created by miner # 32&#10;Id: 1&#10;Timestamp: 1675451697979&#10;Magic number: -1965123510&#10;Hash of the previous block:&#10;0&#10;Hash of the block:&#10;a88d40d5af09e5fa2ceb55dbb425dd5375e357884d6caa93d2f1f85a0527c56e&#10;Block data: Sarah: You always will be first because it is your blockchain!&#10;Block was generating for 0 seconds&#10;N stays the same&#10;&#10;Block:&#10;Created by miner # 31&#10;Id: 2&#10;Timestamp: 1675451698001&#10;Magic number: 15204442&#10;Hash of the previous block:&#10;a88d40d5af09e5fa2ceb55dbb425dd5375e357884d6caa93d2f1f85a0527c56e&#10;Hash of the block:&#10;99006224198d630540fefa596c2f052aad4eda70bd529c7ee716b6c167d9a37f&#10;Block data: Sarah: Anyway, thank you for this amazing chat.&#10;Sarah: It's not fair!&#10;Tom: Hey, I'm first!&#10;Tom: You're welcome :)&#10;Block was generating for 0 seconds&#10;N stays the same&#10;&#10;Block:&#10;Created by miner # 33&#10;Id: 3&#10;Timestamp: 1675451698001&#10;Magic number: -903789463&#10;Hash of the previous block:&#10;99006224198d630540fefa596c2f052aad4eda70bd529c7ee716b6c167d9a37f&#10;Hash of the block:&#10;01b1dddabae23fecf6cd29223ab36038eff9807c994cfc18638d0a57ec90a6e9&#10;Block data: Tom: Hey, I'm first!&#10;Block was generating for 0 seconds&#10;N stays the same&#10;&#10;Block:&#10;Created by miner # 31&#10;Id: 4&#10;Timestamp: 1675451698007&#10;Magic number: 1070107455&#10;Hash of the previous block:&#10;01b1dddabae23fecf6cd29223ab36038eff9807c994cfc18638d0a57ec90a6e9&#10;Hash of the block:&#10;e469667505ce1ac0a54a7474efe8ffb5c11223b74173a3fd754090557a8ccd37&#10;Block data: Sarah: It's not fair!&#10;Sarah: You always will be first because it is your blockchain!&#10;Block was generating for 0 seconds&#10;N stays the same&#10;&#10;Block:&#10;Created by miner # 32&#10;Id: 5&#10;Timestamp: 1675451698012&#10;Magic number: -1954842996&#10;Hash of the previous block:&#10;e469667505ce1ac0a54a7474efe8ffb5c11223b74173a3fd754090557a8ccd37&#10;Hash of the block:&#10;68fe9bf0e272e412cd88364b2c3e6d4a58255b41632ab4cd4ed003c8b71cc493&#10;Block data: Tom: You're welcome :)&#10;Block was generating for 0 seconds&#10;N stays the same" type="java.lang.AssertionError">java.lang.AssertionError: Error in test #1

In this test, the program is running for a long time, more than 15 seconds. Most likely, the program has gone into an infinite loop.

Please find below the output of your program during this failed test.

---

Block:
Created by miner # 32
Id: 1
Timestamp: 1675451697979
Magic number: -1965123510
Hash of the previous block:
0
Hash of the block:
a88d40d5af09e5fa2ceb55dbb425dd5375e357884d6caa93d2f1f85a0527c56e
Block data: Sarah: You always will be first because it is your blockchain!
Block was generating for 0 seconds
N stays the same

Block:
Created by miner # 31
Id: 2
Timestamp: 1675451698001
Magic number: 15204442
Hash of the previous block:
a88d40d5af09e5fa2ceb55dbb425dd5375e357884d6caa93d2f1f85a0527c56e
Hash of the block:
99006224198d630540fefa596c2f052aad4eda70bd529c7ee716b6c167d9a37f
Block data: Sarah: Anyway, thank you for this amazing chat.
Sarah: It's not fair!
Tom: Hey, I'm first!
Tom: You're welcome :)
Block was generating for 0 seconds
N stays the same

Block:
Created by miner # 33
Id: 3
Timestamp: 1675451698001
Magic number: -903789463
Hash of the previous block:
99006224198d630540fefa596c2f052aad4eda70bd529c7ee716b6c167d9a37f
Hash of the block:
01b1dddabae23fecf6cd29223ab36038eff9807c994cfc18638d0a57ec90a6e9
Block data: Tom: Hey, I'm first!
Block was generating for 0 seconds
N stays the same

Block:
Created by miner # 31
Id: 4
Timestamp: 1675451698007
Magic number: 1070107455
Hash of the previous block:
01b1dddabae23fecf6cd29223ab36038eff9807c994cfc18638d0a57ec90a6e9
Hash of the block:
e469667505ce1ac0a54a7474efe8ffb5c11223b74173a3fd754090557a8ccd37
Block data: Sarah: It's not fair!
Sarah: You always will be first because it is your blockchain!
Block was generating for 0 seconds
N stays the same

Block:
Created by miner # 32
Id: 5
Timestamp: 1675451698012
Magic number: -1954842996
Hash of the previous block:
e469667505ce1ac0a54a7474efe8ffb5c11223b74173a3fd754090557a8ccd37
Hash of the block:
68fe9bf0e272e412cd88364b2c3e6d4a58255b41632ab4cd4ed003c8b71cc493
Block data: Tom: You're welcome :)
Block was generating for 0 seconds
N stays the same
	at org.junit.Assert.fail(Assert.java:89)
	at org.hyperskill.hstest.stage.StageTest.start(StageTest.java:203)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:38)
	at org.gradle.api.internal.tasks.testing.junit.AbstractJUnitTestClassProcessor.processTestClass(AbstractJUnitTestClassProcessor.java:62)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.processTestClass(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$2.run(TestWorker.java:176)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[?[1;31m
Start test 1?[0m
Block:
Created by miner # 32
Id: 1
Timestamp: 1675451697979
Magic number: -1965123510
Hash of the previous block:
0
Hash of the block:
a88d40d5af09e5fa2ceb55dbb425dd5375e357884d6caa93d2f1f85a0527c56e
Block data: Sarah: You always will be first because it is your blockchain!
Block was generating for 0 seconds
N stays the same

Block:
Created by miner # 31
Id: 2
Timestamp: 1675451698001
Magic number: 15204442
Hash of the previous block:
a88d40d5af09e5fa2ceb55dbb425dd5375e357884d6caa93d2f1f85a0527c56e
Hash of the block:
99006224198d630540fefa596c2f052aad4eda70bd529c7ee716b6c167d9a37f
Block data: Sarah: Anyway, thank you for this amazing chat.
Sarah: It's not fair!
Tom: Hey, I'm first!
Tom: You're welcome :)
Block was generating for 0 seconds
N stays the same

Block:
Created by miner # 33
Id: 3
Timestamp: 1675451698001
Magic number: -903789463
Hash of the previous block:
99006224198d630540fefa596c2f052aad4eda70bd529c7ee716b6c167d9a37f
Hash of the block:
01b1dddabae23fecf6cd29223ab36038eff9807c994cfc18638d0a57ec90a6e9
Block data: Tom: Hey, I'm first!
Block was generating for 0 seconds
N stays the same

Block:
Created by miner # 31
Id: 4
Timestamp: 1675451698007
Magic number: 1070107455
Hash of the previous block:
01b1dddabae23fecf6cd29223ab36038eff9807c994cfc18638d0a57ec90a6e9
Hash of the block:
e469667505ce1ac0a54a7474efe8ffb5c11223b74173a3fd754090557a8ccd37
Block data: Sarah: It's not fair!
Sarah: You always will be first because it is your blockchain!
Block was generating for 0 seconds
N stays the same

Block:
Created by miner # 32
Id: 5
Timestamp: 1675451698012
Magic number: -1954842996
Hash of the previous block:
e469667505ce1ac0a54a7474efe8ffb5c11223b74173a3fd754090557a8ccd37
Hash of the block:
68fe9bf0e272e412cd88364b2c3e6d4a58255b41632ab4cd4ed003c8b71cc493
Block data: Tom: You're welcome :)
Block was generating for 0 seconds
N stays the same

]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
